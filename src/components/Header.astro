---
// src/components/Header.astro
import { isAdmin } from '../utils/roles';
import { isAuthenticated } from '../utils/auth'; // Para verificar autenticación

// Verificar si el usuario es administrador
const esAdmin = isAdmin();

// Navegación principal
const enlaces = [
  { texto: 'Inicio', url: '/' },
  { texto: 'Catálogo', url: '/catalog' },
  { texto: 'Servicios', url: '/services' },
  { texto: 'Galería', url: '/gallery' },
  { texto: 'Contacto', url: '/contact' },
];

// Enlaces de administrador
const adminEnlaces = [
  { texto: 'Panel', url: '/admin' },
  { texto: 'Productos', url: '/admin/products' },
  { texto: 'Órdenes', url: '/admin/orders' },
  { texto: 'Usuarios', url: '/admin/users' },
];

---

<script>
  // Función para alternar el carrito
  function toggleCarrito(abrir?: boolean) {
    const carrito = document.getElementById('carrito');
    const carritoBtn = document.getElementById('carrito-btn');
    
    if (carrito && carritoBtn) {
      // Si abrir es undefined, alternamos el estado actual
      const estaAbierto = abrir === undefined 
        ? !carrito.classList.contains('carrito--activo')
        : abrir;
      
      if (estaAbierto) {
        carrito.classList.add('carrito--activo');
        carritoBtn.setAttribute('aria-expanded', 'true');
        // Bloquear el scroll del body cuando el carrito está abierto
        document.body.style.overflow = 'hidden';
      } else {
        carrito.classList.remove('carrito--activo');
        carritoBtn.setAttribute('aria-expanded', 'false');
        // Restaurar el scroll del body
        document.body.style.overflow = '';
      }
    }
  }

  // Script que se ejecutará en el cliente
  document.addEventListener('DOMContentLoaded', () => {
    // Manejo del menú móvil
    const menuBtn = document.querySelector('.header__menu-btn');
    const menu = document.querySelector('.header__nav');
    
    if (menuBtn && menu) {
      // Cerrar menú al hacer clic en un enlace
      document.querySelectorAll('.header__enlace').forEach(enlace => {
        enlace.addEventListener('click', () => {
          menuBtn.setAttribute('aria-expanded', 'false');
          menu.classList.remove('header__nav--activo');
          const overlay = document.getElementById('menu-overlay');
          if (overlay) overlay.classList.remove('header__overlay--active');
        });
      });
    }
    
    // Manejador para los botones de agregar al carrito
    document.addEventListener('click', (e) => {
      const target = e.target as HTMLElement;
      const botonCarrito = target.closest('.producto__carrito') as HTMLElement;
      
      if (botonCarrito) {
        e.preventDefault();
        
        const id = botonCarrito.getAttribute('data-id');
        const nombre = botonCarrito.getAttribute('data-nombre');
        const precio = botonCarrito.getAttribute('data-precio');
        const imagen = botonCarrito.getAttribute('data-imagen');
        
        if (id && nombre && precio && imagen) {
          // Importar dinámicamente la función addToCart
          import('../scripts/cart').then(({ addToCart }) => {
            addToCart({
              id,
              nombre,
              precio: parseFloat(precio),
              imagen
            });
            
            // Mostrar notificación
            const notificacion = document.createElement('div');
            notificacion.className = 'notificacion';
            notificacion.textContent = `"${nombre}" se ha añadido al carrito`;
            document.body.appendChild(notificacion);
            
            // Eliminar la notificación después de 3 segundos
            setTimeout(() => {
              notificacion.classList.add('mostrar');
              
              setTimeout(() => {
                notificacion.classList.remove('mostrar');
                setTimeout(() => {
                  document.body.removeChild(notificacion);
                }, 300);
              }, 3000);
            }, 0);
          }).catch(error => {
            console.error('Error al cargar el módulo del carrito:', error);
          });
        }
      }
    });

    // Manejar el botón del carrito
    const carritoBtn = document.getElementById('carrito-btn');
    if (carritoBtn) {
      carritoBtn.addEventListener('click', (e) => {
        e.preventDefault();
        toggleCarrito();
      });
    }

    // Manejar el botón de cierre del carrito
    const cerrarCarritoBtn = document.querySelector('.carrito__cerrar');
    if (cerrarCarritoBtn) {
      cerrarCarritoBtn.addEventListener('click', (e) => {
        e.preventDefault();
        toggleCarrito(false);
      });
    }
    
    // Manejar clic fuera del carrito para cerrarlo
    document.addEventListener('click', (e: MouseEvent) => {
      const carrito = document.getElementById('carrito');
      const carritoBtn = document.getElementById('carrito-btn');
      const target = e.target as Node | null;
      
      if (carrito && carritoBtn && target && 
          !carrito.contains(target) && 
          !carritoBtn.contains(target) &&
          carrito.classList.contains('carrito--activo')) {
        toggleCarrito(false);
      }
    });

    // Inicializar el carrito
    (async () => {
      try {
        // Cargar el módulo del carrito
        const { initCartEventListeners } = await import('../scripts/cart');
        if (typeof initCartEventListeners === 'function') {
          console.log('Inicializando carrito desde el header...');
          initCartEventListeners();
        } else {
          console.warn('La función initCartEventListeners no está disponible');
        }
      } catch (error) {
        console.error('Error al cargar el carrito:', error);
      }
    })();
  });
</script>

<header class="header">
  <div class="contenedor header__contenedor">
    <!-- Logo -->
    <a href="/" class="header__logo" aria-label="Hilo Mágico - Inicio">
      <img src="/img/hilo-magico-header.png" alt="Hilo Mágico" width="200" height="100" />
    </a>
    
    <!-- Botón de menú móvil -->
    <button 
      class="header__menu-btn" 
      id="menu-btn"
      aria-label="Menú principal"
      aria-expanded="false"
      aria-controls="menu-principal"
    >
      <span class="header__menu-icon"></span>
      <span class="sr-only">Menú</span>
    </button>
    
    <!-- Navegación principal -->
    <nav 
      class="header__nav" 
      id="menu-principal" 
      aria-label="Navegación principal"
    >
      <ul class="header__menu">
        {enlaces.map((enlace) => (
          <li class="header__menu-item">
            <a 
              href={enlace.url} 
              class="header__enlace"
            >
              {enlace.texto}
            </a>
          </li>
        ))}
        
        {esAdmin && (
          <li class="header__menu-item header__menu-item--admin">
            <button 
              class="header__enlace header__enlace--admin"
              aria-expanded="false"
              aria-controls="admin-submenu"
            >
              Administración
            </button>
            <ul class="header__submenu" id="admin-submenu">
              {adminEnlaces.map((enlace) => (
                <li class="header__submenu-item">
                  <a href={enlace.url} class="header__submenu-link">
                    <i class="fas fa-cog mr-2" aria-hidden="true"></i>
                    {enlace.texto}
                  </a>
                </li>
              ))}
            </ul>
          </li>
        )}
      </ul>
    </nav>

    <!-- Botones de la derecha (carrito y perfil) -->
    <div class="header__acciones">
      <!-- Botón del carrito -->
      <button 
        class="header__carrito-btn" 
        id="carrito-btn"
        aria-label="Carrito de compras"
        aria-expanded="false"
        aria-controls="carrito"
      >
        <i class="fas fa-shopping-cart" aria-hidden="true"></i>
        <span class="header__carrito-contador" id="contador-carrito">0</span>
        <span class="sr-only">Ver carrito</span>
      </button>
      
      {isAuthenticated() ? (
        <!-- Usuario autenticado -->
        <div class="header__user">
          <a href="/profile" class="header__user-btn">
            <i class="fas fa-user" aria-hidden="true"></i>
            <span>Mi cuenta</span>
          </a>
          <a href="/auth/logout" class="header__logout-btn">
            <i class="fas fa-sign-out-alt" aria-hidden="true"></i>
            <span class="sr-only">Cerrar sesión</span>
          </a>
        </div>
      ) : (
        <!-- Usuario no autenticado -->
        <div class="header__auth">
          <a href="/auth/login" class="header__auth-btn">
            Iniciar sesión
          </a>
        </div>
      )}
    </div>
    
    <!-- Overlay para menú móvil -->
    <div 
      class="header__overlay" 
      id="menu-overlay" 
      role="presentation"
      tabindex="-1"
      aria-hidden="true"
    ></div>
  </div>
</header>
