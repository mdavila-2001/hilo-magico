---
// src/components/auth/LoginForm.astro

interface Props {
  error?: string;
}

const { error } = Astro.props;
---

<div class="login-form">
  {error && (
    <div class="error-message">
      <i class="fas fa-exclamation-circle"></i>
      <span>{error}</span>
    </div>
  )}
  
  <form id="login-form" method="POST" action="/api/auth/login">
    <div class="form-group">
      <label for="email">Correo electrónico</label>
      <div class="input-with-icon">
        <i class="fas fa-envelope"></i>
        <input 
          type="email" 
          id="email" 
          name="email" 
          required 
          placeholder="tucorreo@ejemplo.com"
          autocomplete="username"
        />
      </div>
    </div>
    
    <div class="form-group">
      <div class="form-header">
        <label for="password">Contraseña</label>
        <a href="/recuperar-contrasena" class="forgot-password">¿Olvidaste tu contraseña?</a>
      </div>
      <div class="input-with-icon">
        <i class="fas fa-lock"></i>
        <input 
          type="password" 
          id="password" 
          name="password" 
          required 
          placeholder="••••••••"
          autocomplete="current-password"
        />
        <button type="button" class="toggle-password" aria-label="Mostrar contraseña">
          <i class="far fa-eye"></i>
        </button>
      </div>
    </div>
    
    <div class="form-options">
      <label class="checkbox-container">
        <input type="checkbox" id="remember" name="remember" />
        <span class="checkmark"></span>
        Recordar sesión
      </label>
    </div>
    
    <button type="submit" class="btn btn-primary btn-block">
      Iniciar sesión
    </button>
  </form>
  
  <div class="divider">
    <span>o</span>
  </div>
  
  <div class="social-login">
    <p>Inicia sesión con:</p>
    <div class="social-buttons">
      <button type="button" class="btn btn-social btn-google">
        <i class="fab fa-google"></i> Google
      </button>
      <button type="button" class="btn btn-social btn-facebook">
        <i class="fab fa-facebook-f"></i> Facebook
      </button>
    </div>
  </div>
  
  <p class="register-link">
    ¿No tienes una cuenta? <a href="/registro">Regístrate</a>
  </p>
</div>

<style>
  /* Estilos específicos para el formulario de login */
  .login-form {
    max-width: 420px;
    margin: 0 auto;
    padding: 2rem;
    background: var(--color-blanco);
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  }
  
  .login-form h2 {
    text-align: center;
    color: var(--color-violeta-oscuro);
    margin-bottom: 1.5rem;
    font-family: var(--fuente-titulos);
    font-weight: 600;
  }
  
  .form-group {
    margin-bottom: 1.5rem;
  }
  
  .form-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
  }
  
  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--color-violeta-oscuro);
    font-weight: 500;
  }
  
  .input-with-icon {
    position: relative;
  }
  
  .input-with-icon i {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: var(--color-lavanda);
  }
  
  .input-with-icon input {
    width: 100%;
    padding: 0.75rem 1rem 0.75rem 2.5rem;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    font-size: 1rem;
    transition: all 0.3s ease;
  }
  
  .input-with-icon input:focus {
    border-color: var(--color-violeta-oscuro);
    box-shadow: 0 0 0 3px rgba(62, 25, 95, 0.1);
    outline: none;
  }
  
  .toggle-password {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: var(--color-lavanda);
    cursor: pointer;
  }
  
  .forgot-password {
    font-size: 0.875rem;
    color: var(--color-violeta-oscuro);
    text-decoration: none;
    transition: color 0.2s;
  }
  
  .forgot-password:hover {
    color: var(--color-lavanda);
    text-decoration: underline;
  }
  
  .form-options {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 1.5rem 0;
  }
  
  .checkbox-container {
    display: flex;
    align-items: center;
    position: relative;
    padding-left: 2rem;
    cursor: pointer;
    user-select: none;
  }
  
  .checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  .checkmark {
    position: absolute;
    left: 0;
    height: 1.25rem;
    width: 1.25rem;
    background-color: #fff;
    border: 2px solid #d1d5db;
    border-radius: 4px;
    transition: all 0.2s;
  }
  
  .checkbox-container:hover input ~ .checkmark {
    border-color: var(--color-lavanda);
  }
  
  .checkbox-container input:checked ~ .checkmark {
    background-color: var(--color-violeta-oscuro);
    border-color: var(--color-violeta-oscuro);
  }
  
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  .checkbox-container input:checked ~ .checkmark:after {
    display: block;
  }
  
  .checkbox-container .checkmark:after {
    left: 6px;
    top: 2px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
  }
  
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s;
    text-align: center;
  }
  
  .btn-primary {
    background-color: var(--color-violeta-oscuro);
    color: white;
    width: 100%;
  }
  
  .btn-primary:hover {
    background-color: darken(#3e195f, 5%);
    transform: translateY(-1px);
  }
  
  .divider {
    display: flex;
    align-items: center;
    text-align: center;
    margin: 1.5rem 0;
    color: #6b7280;
  }
  
  .divider::before,
  .divider::after {
    content: '';
    flex: 1;
    border-bottom: 1px solid #e5e7eb;
  }
  
  .divider span {
    padding: 0 1rem;
  }
  
  .social-login {
    text-align: center;
    margin-bottom: 1.5rem;
  }
  
  .social-login p {
    color: #6b7280;
    margin-bottom: 1rem;
  }
  
  .social-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
  }
  
  .btn-social {
    flex: 1;
    padding: 0.6rem 1rem;
    border: 1px solid #e5e7eb;
    background: white;
    color: #374151;
    font-size: 0.875rem;
  }
  
  .btn-social i {
    margin-right: 0.5rem;
  }
  
  .btn-google:hover {
    background-color: #f3f4f6;
    border-color: #d1d5db;
  }
  
  .btn-facebook {
    background-color: #1877f2;
    color: white;
    border-color: #1877f2;
  }
  
  .btn-facebook:hover {
    background-color: #166fe5;
    border-color: #166fe5;
  }
  
  .register-link {
    text-align: center;
    color: #6b7280;
    margin-top: 1.5rem;
  }
  
  .register-link a {
    color: var(--color-violeta-oscuro);
    font-weight: 500;
    text-decoration: none;
  }
  
  .register-link a:hover {
    text-decoration: underline;
  }
  
  .error-message {
    display: flex;
    align-items: center;
    background-color: #fef2f2;
    color: #dc2626;
    padding: 0.75rem 1rem;
    border-radius: 8px;
    margin-bottom: 1.5rem;
    font-size: 0.875rem;
  }
  
  .error-message i {
    margin-right: 0.5rem;
  }
  
  @media (max-width: 480px) {
    .login-form {
      padding: 1.5rem;
      margin: 0 1rem;
    }
    
    .social-buttons {
      flex-direction: column;
    }
  }
</style>

<script>
  // Toggle password visibility
  document.addEventListener('DOMContentLoaded', () => {
    const togglePassword = document.querySelector('.toggle-password');
    const password = document.getElementById('password');
    
    if (togglePassword && password) {
      togglePassword.addEventListener('click', () => {
        const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
        password.setAttribute('type', type);
        
        const icon = togglePassword.querySelector('i');
        if (type === 'password') {
          icon.classList.remove('fa-eye-slash');
          icon.classList.add('fa-eye');
        } else {
          icon.classList.remove('fa-eye');
          icon.classList.add('fa-eye-slash');
        }
      });
    }
    
    // Form submission
    const form = document.getElementById('login-form');
    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());
        
        try {
          const response = await fetch('/api/auth/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          });
          
          const result = await response.json();
          
          if (response.ok) {
            // Redirigir al dashboard o página de inicio
            window.location.href = result.redirectTo || '/';
          } else {
            // Mostrar mensaje de error
            const errorDiv = document.createElement('div');
            errorDiv.className = 'error-message';
            errorDiv.innerHTML = `
              <i class="fas fa-exclamation-circle"></i>
              <span>${result.message || 'Error al iniciar sesión. Inténtalo de nuevo.'}</span>
            `;
            
            // Eliminar mensajes de error anteriores
            const existingError = form.querySelector('.error-message');
            if (existingError) {
              existingError.remove();
            }
            
            form.prepend(errorDiv);
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Ocurrió un error al intentar iniciar sesión. Por favor, inténtalo de nuevo.');
        }
      });
    }
  });
</script>
