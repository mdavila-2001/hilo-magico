---
// src/components/ProductoCard.astro

// Importar el componente React con directiva client:load
import AddToCartButton from './AddToCartButton.tsx';
import type { Producto } from '../types/product.types';

const { producto } = Astro.props as { producto: Producto };

// Función para formatear el precio
const formatearPrecio = (precio: number): string => {
  return `Bs. ${precio}`;
};
---

<article class="producto">
  <div class="producto__imagen-contenedor">
    {producto.images && producto.images.length > 0 ? (
      <img 
        src={producto.images[0]} 
        alt={producto.name || producto.nombre || 'Producto sin nombre'} 
        class="producto__imagen"
        width="300"
        height="200"
        loading="lazy"
      />
    ) : (
      <div class="producto__imagen-placeholder">
        <i class="fas fa-image"></i>
        <span>Sin imagen</span>
      </div>
    )}
    {(producto.category || producto.categoria) && (
      <span class="producto__categoria">
        {producto.category || producto.categoria}
      </span>
    )}
  </div>
  
  <div class="producto__info">
    <h3 class="producto__nombre">{producto.name || producto.nombre || 'Producto sin nombre'}</h3>
    <p class="producto__descripcion">{producto.description || producto.descripcion || ''}</p>
    
    <div class="producto__precios">
      <span class="producto__precio">
        {new Intl.NumberFormat('es-ES', {
          style: 'currency',
          currency: 'BOB'
        }).format(producto.price || producto.precio || 0)}
      </span>
      
      {(producto.compare_at_price && (producto.compare_at_price > (producto.price || 0))) && (
        <span class="producto__precio-anterior">
          {new Intl.NumberFormat('es-ES', {
            style: 'currency',
            currency: 'BOB'
          }).format(producto.compare_at_price)}
        </span>
      )}
    </div>
    
    <div class="producto__acciones">
      <AddToCartButton 
        client:load
        productId={producto.id}
        onAddToCart={() => {
          console.log('Producto agregado al carrito:', producto.id);
          // Aquí podrías agregar notificaciones o actualizaciones de UI
          const event = new CustomEvent('cart-updated', { detail: { productId: producto.id } });
          window.dispatchEvent(event);
        }}
      />
    </div>
  </div>
</article>
