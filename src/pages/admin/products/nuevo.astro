---
// src/pages/admin/products/nuevo.astro
import AdminLayout from '../../../layouts/admin/AdminLayout.astro';

// Título y descripción para el SEO
const pageTitle = 'Nuevo Producto';
const pageDescription = 'Agregar un nuevo producto a Hilo Mágico';

// Categorías de ejemplo (en un caso real, vendrían de una base de datos)
const categorias = [
  { id: 1, nombre: 'Vestidos' },
  { id: 2, nombre: 'Blusas' },
  { id: 3, nombre: 'Faldas' },
  { id: 4, nombre: 'Pantalones' },
  { id: 5, nombre: 'Accesorios' }
];
---

<AdminLayout title={pageTitle} description={pageDescription}>
  <div class="admin-content">
    <div class="admin-header">
      <h1>Nuevo Producto</h1>
      <a href="/admin/products" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Volver
      </a>
    </div>

    <div class="card">
      <div class="card-body">
        <form id="productoForm" class="needs-validation" novalidate>
          <div class="row mb-4">
            <div class="col-md-8">
              <!-- Información Básica -->
              <div class="card mb-4">
                <div class="card-header">
                  <h5 class="mb-0">Información Básica</h5>
                </div>
                <div class="card-body">
                  <div class="mb-3">
                    <label for="nombre" class="form-label">Nombre del Producto *</label>
                    <input type="text" class="form-control" id="nombre" required>
                    <div class="invalid-feedback">
                      Por favor ingresa el nombre del producto.
                    </div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="descripcion" class="form-label">Descripción</label>
                    <textarea class="form-control" id="descripcion" rows="3"></textarea>
                  </div>
                  
                  <div class="row">
                    <div class="col-md-6">
                      <div class="mb-3">
                        <label for="categoria" class="form-label">Categoría *</label>
                        <select class="form-select" id="categoria" required>
                          <option value="" selected disabled>Selecciona una categoría</option>
                          {categorias.map(categoria => (
                            <option value={categoria.id}>{categoria.nombre}</option>
                          ))}
                        </select>
                        <div class="invalid-feedback">
                          Por favor selecciona una categoría.
                        </div>
                      </div>
                    </div>
                    <div class="col-md-6">
                      <div class="mb-3">
                        <label for="estado" class="form-label">Estado *</label>
                        <select class="form-select" id="estado" required>
                          <option value="1" selected>Activo</option>
                          <option value="0">Inactivo</option>
                        </select>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- Precios e Inventario -->
              <div class="card mb-4">
                <div class="card-header">
                  <h5 class="mb-0">Precio e Inventario</h5>
                </div>
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6">
                      <div class="mb-3">
                        <label for="precio" class="form-label">Precio *</label>
                        <div class="input-group">
                          <span class="input-group-text">$</span>
                          <input type="number" class="form-control" id="precio" min="0" step="0.01" required>
                          <div class="invalid-feedback">
                            Por favor ingresa un precio válido.
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="col-md-6">
                      <div class="mb-3">
                        <label for="stock" class="form-label">Stock *</label>
                        <input type="number" class="form-control" id="stock" min="0" required>
                        <div class="invalid-feedback">
                          Por favor ingresa la cantidad en stock.
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="col-md-4">
              <!-- Imágenes del Producto -->
              <div class="card mb-4">
                <div class="card-header">
                  <h5 class="mb-0">Imágenes del Producto</h5>
                </div>
                <div class="card-body">
                  <div class="mb-3">
                    <label for="imagenPrincipal" class="form-label">Imagen Principal *</label>
                    <input class="form-control" type="file" id="imagenPrincipal" accept="image/*" required>
                    <div class="invalid-feedback">
                      Por favor selecciona una imagen principal.
                    </div>
                    <div class="mt-2">
                      <img id="vistaPreviaPrincipal" src="/images/placeholder.jpg" class="img-thumbnail d-none" style="max-width: 100%; max-height: 200px; object-fit: cover;">
                    </div>
                  </div>
                  
                  <div class="mb-3">
                    <label class="form-label">Imágenes Adicionales</label>
                    <input class="form-control" type="file" id="imagenesAdicionales" multiple accept="image/*">
                    <div id="vistaPreviaAdicionales" class="d-flex flex-wrap gap-2 mt-2">
                      <!-- Aquí se mostrarán las miniaturas de las imágenes adicionales -->
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- Opciones de Producto -->
              <div class="card">
                <div class="card-header">
                  <h5 class="mb-0">Opciones</h5>
                </div>
                <div class="card-body">
                  <div class="form-check form-switch mb-3">
                    <input class="form-check-input" type="checkbox" id="destacado" checked>
                    <label class="form-check-label" for="destacado">Producto Destacado</label>
                  </div>
                  <div class="form-check form-switch mb-3">
                    <input class="form-check-input" type="checkbox" id="envioGratis">
                    <label class="form-check-label" for="envioGratis">Envío Gratis</label>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <div class="d-flex justify-content-end gap-2">
            <button type="button" class="btn btn-secondary">Cancelar</button>
            <button type="submit" class="btn btn-primary">Guardar Producto</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <style>
    .form-label.required:after {
      content: " *";
      color: var(--danger);
    }
    
    .img-thumbnail {
      cursor: pointer;
      transition: transform 0.2s;
    }
    
    .img-thumbnail:hover {
      transform: scale(1.05);
    }
  </style>
  
  <script>
    // Validación del formulario
    (function () {
      'use strict'
      
      // Obtener el formulario al que queremos agregar la validación
      // Obtener elementos del DOM con tipos correctos
      const form = document.getElementById('productoForm') as HTMLFormElement | null;
      const imagenPrincipal = document.getElementById('imagenPrincipal') as HTMLInputElement | null;
      const vistaPreviaPrincipal = document.getElementById('vistaPreviaPrincipal') as HTMLImageElement | null;
      const imagenesAdicionales = document.getElementById('imagenesAdicionales') as HTMLInputElement | null;
      const vistaPreviaAdicionales = document.getElementById('vistaPreviaAdicionales') as HTMLDivElement | null;

      // Verificar que los elementos existen
      if (!form || !imagenPrincipal || !vistaPreviaPrincipal || !imagenesAdicionales || !vistaPreviaAdicionales) {
        console.error('No se encontraron todos los elementos necesarios');
        return;
      }

      // Vista previa de la imagen principal
      imagenPrincipal.addEventListener('change', function(e: Event) {
        const target = e.target as HTMLInputElement;
        const file = target.files?.[0];
        
        if (file) {
          const reader = new FileReader();
          reader.onload = function(e: ProgressEvent<FileReader>) {
            if (e.target?.result) {
              vistaPreviaPrincipal.src = e.target.result as string;
              vistaPreviaPrincipal.classList.remove('d-none');
            }
          };
          reader.readAsDataURL(file);
        } else {
          vistaPreviaPrincipal.classList.add('d-none');
        }
      });
      
      // Vista previa de imágenes adicionales
      imagenesAdicionales.addEventListener('change', function(e: Event) {
        const target = e.target as HTMLInputElement;
        const files = target.files;
        
        if (!files || files.length === 0) return;
        
        vistaPreviaAdicionales.innerHTML = ''; // Limpiar contenedor
        
        Array.from(files).forEach(file => {
          const reader = new FileReader();
          reader.onload = function(e: ProgressEvent<FileReader>) {
            if (e.target?.result) {
              const img = document.createElement('img');
              img.src = e.target.result as string;
              img.className = 'img-thumbnail';
              img.style.width = '80px';
              img.style.height = '80px';
              img.style.objectFit = 'cover';
              img.style.marginRight = '5px';
              vistaPreviaAdicionales.appendChild(img);
            }
          };
          reader.readAsDataURL(file);
        });
      });
      
      // Validación del formulario
      form.addEventListener('submit', function(event: Event) {
        event.preventDefault();
        
        if (!form.checkValidity()) {
          event.stopPropagation();
        } else {
          // Aquí iría la lógica para enviar el formulario
          console.log('Formulario válido, enviando...');
        }
        
        form.classList.add('was-validated');
      }, false);
    })()
  </script>
</AdminLayout>
