---
// src/pages/admin/index.astro
import type { Order, Product } from '@/types/admin';
import AdminLayout from '../../layouts/admin/AdminLayout.astro';
import { getCurrentUser } from '../../utils/auth';

// Configuración de la página
const pageTitle = 'Dashboard';
const pageDescription = 'Vista general del panel de administración';

// Obtener información del usuario actual
const currentUser = getCurrentUser();

// Si no hay usuario, redirigir al login
/* if (!currentUser) {
  return Astro.redirect('/auth/login');
}

// Si no es admin, redirigir al inicio
if (currentUser.role !== 'admin') {
  return Astro.redirect('/');
} */

// Datos de ejemplo para el dashboard
const stats = [
  { 
    name: 'Ventas Totales', 
    value: '$12,450',
    change: '+5.2%',
    changeType: 'increase'
  },
  { 
    name: 'Pedidos Pendientes', 
    value: '45',
    change: '+3',
    changeType: 'increase'
  },
  { 
    name: 'Stock Bajo', 
    value: '12',
    change: '-2',
    changeType: 'decrease'
  },
  { 
    name: 'Clientes Nuevos', 
    value: '28',
    change: '+8',
    changeType: 'increase'
  }
];

const recentOrders = [
  {
    id: 1,
    customer: 'Juan Pérez',
    total: '$250.00',
    status: 'pending',
    date: '2025-06-27'
  },
  {
    id: 2,
    customer: 'María García',
    total: '$120.00',
    status: 'completed',
    date: '2025-06-26'
  },
  {
    id: 3,
    customer: 'Carlos López',
    total: '$180.00',
    status: 'processing',
    date: '2025-06-25'
  }
];

const topProducts = [
  { name: 'Vestido Floral', category: 'Ropa', sales: 142, stock: 50, status: 'Disponible', revenue: '$2,840.00', image: '/images/products/dress-1.jpg' },
  { name: 'Blusa de Encaje', category: 'Ropa', sales: 98, stock: 30, status: 'Bajo Stock', revenue: '$1,764.00', image: '/images/products/blouse-1.jpg' },
  { name: 'Falda Plisada', category: 'Ropa', sales: 75, stock: 20, status: 'Bajo Stock', revenue: '$1,350.00', image: '/images/products/skirt-1.jpg' },
  { name: 'Conjunto Deportivo', category: 'Ropa', sales: 63, stock: 40, status: 'Disponible', revenue: '$1,197.00', image: '/images/products/activewear-1.jpg' },
  { name: 'Abrigo Largo', category: 'Ropa', sales: 51, stock: 10, status: 'Bajo Stock', revenue: '$1,275.00', image: '/images/products/coat-1.jpg' }
];

const getStatusColor = (status: string) => {
  switch (status) {
    case 'completed':
      return 'bg-green-100 text-green-800';
    case 'pending':
      return 'bg-yellow-100 text-yellow-800';
    case 'processing':
      return 'bg-blue-100 text-blue-800';
    default:
      return 'bg-gray-100 text-gray-800';
  }
};

const getProductStatusColor = (status: string) => {
  switch (status) {
    case 'Disponible':
      return 'bg-green-100 text-green-800';
    case 'Bajo Stock':
      return 'bg-yellow-100 text-yellow-800';
    default:
      return 'bg-red-100 text-red-800';
  }
};

---

<AdminLayout title={pageTitle} description={pageDescription} currentPage="dashboard">
  <div class="space-y-6">
    <!-- Encabezado -->
    <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
      <div>
        <h1 class="text-2xl font-bold text-gray-900">Hola, {currentUser?.first_name || 'Administrador'}</h1>
        <p class="text-gray-600">Bienvenido al panel de control. Aquí tienes un resumen de tu tienda.</p>
      </div>
      <div class="flex flex-wrap gap-3">
        <a href="/admin/orders/new" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          <i class="fas fa-plus mr-2"></i> Nuevo Pedido
        </a>
        <a href="/admin/products/new" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          <i class="fas fa-plus mr-2"></i> Nuevo Producto
        </a>
      </div>
    </div>
    
    <!-- Tarjetas de estadísticas -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
      {stats.map((stat) => (
        <div class="bg-white rounded-lg shadow p-6">
          <div class="flex items-center justify-between">
            <div>
              <dt class="text-sm font-medium text-gray-500 truncate">
                {stat.name}
              </dt>
              <dd class="flex items-baseline">
                <div class="text-2xl font-semibold text-gray-900">
                  {stat.value}
                </div>
                <div class={`ml-2 flex items-baseline text-sm font-semibold ${
                  stat.changeType === 'increase' ? 'text-green-600' :
                  stat.changeType === 'decrease' ? 'text-red-600' :
                  'text-yellow-600'
                }`}>
                  {stat.change}
                </div>
              </dd>
            </div>
            <div class="flex-shrink-0">
              <span class={`p-3 rounded-lg ${
                stat.changeType === 'increase' ? 'bg-green-100 text-green-600' :
                stat.changeType === 'decrease' ? 'bg-red-100 text-red-600' :
                'bg-yellow-100 text-yellow-600'
              }`}>
                <i class={`fas ${
                  stat.name.includes('Ventas') ? 'fa-chart-line' :
                  stat.name.includes('Pedidos') ? 'fa-shopping-cart' :
                  stat.name.includes('Stock') ? 'fa-box' :
                  'fa-user-plus'
                }`} aria-hidden="true"></i>
              </span>
            </div>
          </div>
        </div>
      ))}
    </div>

    <!-- Pedidos recientes -->
    <div class="bg-white shadow rounded-lg">
      <div class="px-4 py-5 sm:px-6">
        <h2 class="text-lg font-medium text-gray-900">Pedidos Recientes</h2>
      </div>
      <div class="border-t border-gray-200">
        <table class="min-w-full">
          <thead>
            <tr>
              <th class="px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Cliente
              </th>
              <th class="px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Total
              </th>
              <th class="px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Estado
              </th>
              <th class="px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Fecha
              </th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            {recentOrders.map((order) => (
              <tr>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm font-medium text-gray-900">
                    {order.customer}
                  </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm text-gray-900">{order.total}</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(order.status)}`}>
                    {order.status}
                  </span>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {order.date}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>

    <!-- Productos más vendidos -->
    <div class="bg-white shadow rounded-lg">
      <div class="px-4 py-5 sm:px-6">
        <h2 class="text-lg font-medium text-gray-900">Productos más vendidos</h2>
      </div>
      <div class="border-t border-gray-200">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4">
          {topProducts.map((product) => (
            <div class="bg-white rounded-lg shadow p-4">
              <div class="flex items-center justify-between">
                <div>
                  <h3 class="text-sm font-medium text-gray-900">{product.name}</h3>
                  <p class="text-sm text-gray-500">{product.category}</p>
                </div>
                <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getProductStatusColor(product.status)}`}>
                  {product.status}
                </span>
              </div>
              <div class="mt-2">
                <p class="text-sm text-gray-600">Ventas: {product.sales}</p>
                <p class="text-sm text-gray-600">Stock: {product.stock}</p>
                <p class="text-sm text-gray-600">Ingresos: {product.revenue}</p>
              </div>
            </div>
          ))}
        </div>
                <th>Total</th>
                <th>Status</th>
              </tr>
            </thead>
            <tbody>
              {recentOrders.map((order) => (
                <tr>
                  <td>{order.id}</td>
                  <td>{order.customer}</td>
                  <td>{order.date}</td>
                  <td>{order.total}</td>
                  <td>
                    <span class="badge" class={getStatusColor(order.status)}>
                      {order.status}
                    </span>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      <div class="card">
        <div class="card-header">
          <h2>Productos Populares</h2>
        </div>
        <div class="card-body">
          <table class="table">
            <thead>
              <tr>
                <th>Producto</th>
                <th>Categoría</th>
                <th>Ventas</th>
                <th>Stock</th>
                <th>Status</th>
              </tr>
            </thead>
            <tbody>
              {topProducts.map((product) => (
                <tr>
                  <td>{product.name}</td>
                  <td>{product.category}</td>
                  <td>{product.sales}</td>
                  <td>{product.stock}</td>
                  <td>
                    <span class="badge badge-{product.status === 'Bajo Stock' ? 'warning' : 'success'}">
                      {product.status}
                    </span>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</AdminLayout>
